{"version":3,"sources":["GroceryList.js","ProductDetails.js","App.js","reportWebVitals.js","index.js"],"names":["GroceryList","products","query","setProductToShow","useState","filteredProducts","setFilteredProducts","useEffect","sort","a","b","priority","name","localeCompare","filter","product","status","map","type","checked","onChange","item","prevState","prevItem","newItem","time","Date","onClick","id","Math","random","ProductDetails","productToShow","setProducts","toLocaleTimeString","productsFromServer","App","setQuery","className","value","event","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d6f12ae.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const GroceryList = ({ products, query, setProductToShow }) => {\n  const [filteredProducts, setFilteredProducts] = useState([]);\n\n  useEffect(() => {\n    setFilteredProducts(\n      [...products]\n      .sort((a, b) => a.priority - b.priority)\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .filter(product => {\n        if (query === 'Ran out') {\n          return product.status === false;\n        }\n\n        if (query === 'Have') {\n          return product.status === true;\n        }\n\n        return product;\n      })\n    )\n  }, [query, products]);\n\n  const addProduct = (item) => {\n    setFilteredProducts(prevState => [...prevState, { ...item, id: Math.random() }]);\n  }\n\n  const removeProduct = (item) => {\n    setFilteredProducts(prevState =>\n      prevState.filter(prevItem => prevItem !== item)\n    )\n  }\n\n  const changeStaus = (item) => {\n    setFilteredProducts((prevState) => {\n      const newState = prevState.map((prevItem) => {\n        if (prevItem === item) {\n          const newItem = { ...item };\n\n          newItem.status = !newItem.status;\n          newItem.time = new Date();\n\n          return newItem;\n        }\n\n        return prevItem;\n      });\n\n      return newState;\n    });\n  }\n\n  const showDetails = (item) => {\n    setProductToShow(item);\n  };\n\n  return (\n    <ul>\n      {filteredProducts.map(product => (\n        <li key={filteredProducts.id}>\n          <input\n            type=\"checkbox\"\n            checked={product.status}\n            onChange={() => changeStaus(product)}\n          />\n          {product.name}\n          {' '}\n          <button\n            onClick={() => addProduct(product)}\n          >\n            Add\n          </button>\n          <button\n            onClick={() => removeProduct(product)}\n          >\n            Remove\n          </button>\n          <button\n            onClick={() => showDetails(product)}\n          >\n            Show details\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","export const ProductDetails = ({ productToShow, setProducts, setProductToShow }) => {\n  const removeProduct = (item) => {\n    setProducts(prevState => prevState.filter(prevItem => prevItem !== item));\n    setProductToShow({});\n  }\n\n  return (\n    <div>\n      <h2>{productToShow.name}</h2>\n      <p>{productToShow.status ? 'Have' : 'Ran out'}</p>\n      <p>{productToShow.time.toLocaleTimeString()}</p>\n      <button\n        onClick={() => removeProduct(productToShow)}\n      >\n        Remove\n      </button>\n    </div>\n  )\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { GroceryList } from './GroceryList';\nimport { ProductDetails } from './ProductDetails';\n\nconst productsFromServer = [\n  { name: 'Bread', status: true, priority: 1, id: 1, time: new Date()},\n  { name: 'Milk', status: false, priority: 4, id: 2, time: new Date()},\n  { name: 'Ice cream', status: true, priority: 4, id: 3, time: new Date()},\n  { name: 'Potato', status: false, priority: 2, id: 4, time: new Date()},\n  { name: 'Cookies', status: true, priority: 3, id: 5, time: new Date()},\n  { name: 'Carrot', status: true, priority: 3, id: 6, time: new Date()},\n  { name: 'Tomato', status: false, priority: 5, id: 7, time: new Date()},\n  { name: 'Cake', status: true, priority: 5, id: 8, time: new Date()},\n  { name: 'Coke', status: true, priority: 1, id: 9, time: new Date()},\n  { name: 'Chocolate', status: false, priority: 2, id: 10, time: new Date()},\n]\n\nfunction App() {\n  const [products, setProducts] = useState(productsFromServer);\n  const [query, setQuery] = useState('All');\n  const [productToShow, setProductToShow] = useState({});\n\n  return (\n    <div className=\"App\">\n      <h1>Grocery List</h1>\n      <select\n        value={query}\n        onChange={event => setQuery(event.target.value)}\n      >\n        <option value=\"All\">All</option>\n        <option value=\"Ran out\">Ran out</option>\n        <option value=\"Have\">Have</option>\n      </select>\n      <GroceryList\n        products={products}\n        query={query}\n        setProductToShow={setProductToShow}\n      />\n      {productToShow.name\n        && (\n          <ProductDetails\n            productToShow={productToShow}\n            setProducts={setProducts}\n            setProductToShow={setProductToShow}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}